#limit_req_zone $binary_remote_addr zone=std_rl:10m rate=10r/s;
#limit_req zone=std_rl burst=10 nodelay;

upstream gaia_hub {
  server  gaia-hub.gaia:3000;
}

upstream gaia_admin {
  server  gaia-admin.gaia:8009;
}

upstream gaia_reader {
  server  gaia-reader.gaia:8008;
}


server {
  listen 80;
  listen [::]:80;
  server_name ${DOMAIN};
  server_tokens off;

  location = /ping {
    root /usr/share/nginx/html;
    try_files /index.html $uri $uri/;
    break;
  }

  location /.well-known/acme-challenge {
    root /usr/share/nginx/html/certbot;
  }
  location / {
    return 301 https://$host$request_uri;
  }
}

server {
  listen 443 ssl;
  listen [::]:443 ssl;
  server_name ${DOMAIN};

  port_in_redirect off;
  proxy_set_header                        Upgrade           $http_upgrade;
  proxy_set_header                        Connection        $connection_upgrade;
  proxy_set_header X-Request-ID           $req_id;
  proxy_set_header X-Real-IP              $the_real_ip;
  proxy_set_header X-Forwarded-For        $the_real_ip;
  proxy_set_header X-Forwarded-Host       $best_http_host;
  proxy_set_header X-Forwarded-Port       $pass_port;
  proxy_set_header X-Forwarded-Proto      $pass_access_scheme;
  proxy_set_header X-Original-URI         $request_uri;
  proxy_set_header X-Scheme               $pass_access_scheme;
  proxy_set_header Host                   $best_http_host;
  proxy_set_header X-Original-Forwarded-For $http_x_forwarded_for;
  proxy_set_header Proxy                  "";
  proxy_connect_timeout                   5s;
  proxy_send_timeout                      600s;
  proxy_read_timeout                      600s;
  proxy_buffering                         off;
  proxy_buffer_size                       4k;
  proxy_buffers                           4 4k;
  proxy_request_buffering                 on;
  proxy_http_version                      1.1;
  proxy_cookie_domain                     off;
  proxy_cookie_path                       off;
  proxy_redirect                          off;

  ssl_certificate /etc/letsencrypt/live/${DOMAIN}/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/${DOMAIN}/privkey.pem;
  include /etc/letsencrypt/options-ssl-nginx.conf;
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

  #security headers
  add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload";
  add_header X-XSS-Protection "1; mode=block" always;
  add_header X-Content-Type-Options "nosniff" always;
  add_header X-Frame-Options "DENY" always;
  add_header X-Frame-Options SAMEORIGIN;

  ##CSP
  # add_header Content-Security-Policy "frame-src 'self'; default-src 'self'; script-src 'self' 'unsafe-inline' https://maxcdn.bootstrapcdn.com https://ajax.googleapis.com; img-src 'self'; style-src 'self' https://maxcdn.bootstrapcdn.com; font-src 'self' data: https://maxcdn.bootstrapcdn.com; form-action 'self'; upgrade-insecure-requests;" always;
  # add_header Referrer-Policy "strict-origin-when-cross-origin" always;
  add_header Content-Security-Policy "default-src 'none'; frame-ancestors 'none'; script-src 'self'; img-src 'self'; style-src 'self'; base-uri 'self'; form-action 'self';";
  add_header Referrer-Policy "no-referrer, strict-origin-when-cross-origin";

  if ($scheme != "https") {
    return 301 https://$host$request_uri;
  }

  location = / {
    root /usr/share/nginx/html;
    try_files /index.html $uri $uri/;
    break;
  }

  location / {
    # proxy
    proxy_pass http://gaia_hub/;
    break;
  }

  location /admin {
    satisfy any;
    allow 192.168.32.1; # this is the ip of the docker bridge
    deny all;

    # proxy
    proxy_pass http://gaia_admin;
    break;
  }

  location /reader/ {
    # proxy
    proxy_pass http://gaia_reader/;
    break;
  }

  location = /healthz {
    satisfy any;
    allow 192.168.32.1; # this is the ip of the docker bridge
    deny all;
    access_log off;
    return 200;
  }

  location = /nginx_status {
    satisfy any;
    allow 192.168.32.1; # this is the ip of the docker bridge
    deny all;
    access_log off;
    stub_status on;
  }

  location = /metrics {
    satisfy any;
    allow 192.168.32.1; # this is the ip of the docker bridge
    deny all;
    access_log off;
    stub_status on;
  }
}
